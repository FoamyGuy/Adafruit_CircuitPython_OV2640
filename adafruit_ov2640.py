# SPDX-FileCopyrightText: 2017 Scott Shawcroft, written for Adafruit Industries
# SPDX-FileCopyrightText: Copyright (c) 2021 Jeff Epler for Adafruit Industries
#
# SPDX-License-Identifier: MIT
"""
`adafruit_ov2640`
================================================================================

CircuitPython driver for OV2640 Camera.


* Author(s): Jeff Epler

Implementation Notes
--------------------

**Hardware:**

.. todo:: Add links to any specific hardware product page(s), or category page(s).
  Use unordered list & hyperlink rST inline format: "* `Link Text <url>`_"

**Software and Dependencies:**

* Adafruit CircuitPython firmware for the supported boards:
  https://github.com/adafruit/circuitpython/releases

.. todo:: Uncomment or remove the Bus Device and/or the Register library dependencies
  based on the library's use of either.

# * Adafruit's Bus Device library: https://github.com/adafruit/Adafruit_CircuitPython_BusDevice
# * Adafruit's Register library: https://github.com/adafruit/Adafruit_CircuitPython_Register
"""

# imports

__version__ = "0.0.0-auto.0"
__repo__ = "https://github.com/adafruit/Adafruit_CircuitPython_OV2640.git"

R_BYPASS = 0x05
QS = 0x44
CTRLI = 0x50
HSIZE = 0x51
VSIZE = 0x52
XOFFL = 0x53
YOFFL = 0x54
VHYX = 0x55
DPRP = 0x56
TEST = 0x57
ZMOW = 0x5A
ZMOH = 0x5B
ZMHH = 0x5C
BPADDR = 0x7C
BPDATA = 0x7D
CTRL2 = 0x86
CTRL3 = 0x87
SIZEL = 0x8C
HSIZE8 = 0xC0
VSIZE8 = 0xC1
CTRL0 = 0xC2
CTRL1 = 0xC3
R_DVP_SP = 0xD3
IMAGE_MODE = 0xDA
RESET = 0xE0
MS_SP = 0xF0
SS_ID = 0xF7
SS_CTRL = 0xF7
MC_BIST = 0xF9
MC_AL = 0xFA
MC_AH = 0xFB
MC_D = 0xFC
P_CMD = 0xFD
P_STATUS = 0xFE
BANK_SEL = 0xFF

CTRLI_LP_DP = 0x80
CTRLI_ROUND = 0x40

CTRL0_AEC_EN = 0x80
CTRL0_AEC_SEL = 0x40
CTRL0_STAT_SEL = 0x20
CTRL0_VFIRST = 0x10
CTRL0_YUV422 = 0x08
CTRL0_YUV_EN = 0x04
CTRL0_RGB_EN = 0x02
CTRL0_RAW_EN = 0x01

CTRL2_DCW_EN = 0x20
CTRL2_SDE_EN = 0x10
CTRL2_UV_ADJ_EN = 0x08
CTRL2_UV_AVG_EN = 0x04
CTRL2_CMX_EN = 0x01

CTRL3_BPC_EN = 0x80
CTRL3_WPC_EN = 0x40

R_DVP_SP_AUTO_MODE = 0x80

R_BYPASS_DSP_EN = 0x00
R_BYPASS_DSP_BYPAS = 0x01

IMAGE_MODE_Y8_DVP_EN = 0x40
IMAGE_MODE_JPEG_EN = 0x10
IMAGE_MODE_YUV422 = 0x00
IMAGE_MODE_RAW10 = 0x04
IMAGE_MODE_RGB565 = 0x08
IMAGE_MODE_HREF_VSYNC = 0x02
IMAGE_MODE_LBYTE_FIRST = 0x01

RESET_MICROC = 0x40
RESET_SCCB = 0x20
RESET_JPEG = 0x10
RESET_DVP = 0x04
RESET_IPU = 0x02
RESET_CIF = 0x01

MC_BIST_RESET = 0x80
MC_BIST_BOOT_ROM_SEL = 0x40
MC_BIST_12KB_SEL = 0x20
MC_BIST_12KB_MASK = 0x30
MC_BIST_512KB_SEL = 0x08
MC_BIST_512KB_MASK = 0x0C
MC_BIST_BUSY_BIT_R = 0x02
MC_BIST_MC_RES_ONE_SH_W = 0x02
MC_BIST_LAUNCH = 0x01


typedef enum {
    BANK_DSP, BANK_SENSOR, BANK_MAX
} ov2640_bank_t;

/* Sensor register bank FF=0x01*/
GAIN = 0x00
COM1 = 0x03
REG04 = 0x04
REG08 = 0x08
COM2 = 0x09
REG_PID = 0x0A
REG_VER = 0x0B
COM3 = 0x0C
COM4 = 0x0D
AEC = 0x10
CLKRC = 0x11
COM7 = 0x12
COM8 = 0x13
COM9 = 0x14 # AGC gain ceiling
COM10 = 0x15
HSTART = 0x17
HSTOP = 0x18
VSTART = 0x19
VSTOP = 0x1A
MIDH = 0x1C
MIDL = 0x1D
AEW = 0x24
AEB = 0x25
VV = 0x26
REG2A = 0x2A
FRARL = 0x2B
ADDVSL = 0x2D
ADDVSH = 0x2E
YAVG = 0x2F
HSDY = 0x30
HEDY = 0x31
REG32 = 0x32
ARCOM2 = 0x34
REG45 = 0x45
FLL = 0x46
FLH = 0x47
COM19 = 0x48
ZOOMS = 0x49
COM22 = 0x4B
COM25 = 0x4E
BD50 = 0x4F
BD60 = 0x50
REG5D = 0x5D
REG5E = 0x5E
REG5F = 0x5F
REG60 = 0x60
HISTO_LOW = 0x61
HISTO_HIGH = 0x62

REG04_DEFAULT = 0x28
REG04_HFLIP_IMG = 0x80
REG04_VFLIP_IMG = 0x40
REG04_VREF_EN = 0x10
REG04_HREF_EN = 0x08
REG04_SET = lambda x: (REG04_DEFAULT|x)

COM2_STDBY = 0x10
COM2_OUT_DRIVE_1x = 0x00
COM2_OUT_DRIVE_2x = 0x01
COM2_OUT_DRIVE_3x = 0x02
COM2_OUT_DRIVE_4x = 0x03

COM3_DEFAULT = 0x38
COM3_BAND_50Hz = 0x04
COM3_BAND_60Hz = 0x00
COM3_BAND_AUTO = 0x02
COM3_BAND_SET = lambda x:    (COM3_DEFAULT|x)

COM7_SRST = 0x80
COM7_RES_UXGA = 0x00 # UXGA
COM7_RES_SVGA = 0x40 # SVGA
COM7_RES_CIF = 0x20 # CIF 
COM7_ZOOM_EN = 0x04 # Enable Zoom
COM7_COLOR_BAR = 0x02 # Enable Color Bar Test

COM8_DEFAULT = 0xC0
COM8_BNDF_EN = 0x20 # Enable Banding filter
COM8_AGC_EN = 0x04 # AGC Auto/Manual control selection
COM8_AEC_EN = 0x01 # Auto/Manual Exposure control
COM8_SET = lambda x:         (COM8_DEFAULT|x)

COM9_DEFAULT = 0x08
COM9_AGC_GAIN_2x = 0x00 # AGC:    2x
COM9_AGC_GAIN_4x = 0x01 # AGC:    4x
COM9_AGC_GAIN_8x = 0x02 # AGC:    8x
COM9_AGC_GAIN_16x = 0x03 # AGC:   16x
COM9_AGC_GAIN_32x = 0x04 # AGC:   32x
COM9_AGC_GAIN_64x = 0x05 # AGC:   64x
COM9_AGC_GAIN_128x = 0x06 # AGC:  128x
COM9_AGC_SET = lambda x:     (COM9_DEFAULT|(x<<5))

COM10_HREF_EN = 0x80 # HSYNC changes to HREF
COM10_HSYNC_EN = 0x40 # HREF changes to HSYNC
COM10_PCLK_FREE = 0x20 # PCLK output option: free running PCLK
COM10_PCLK_EDGE = 0x10 # Data is updated at the rising edge of PCLK
COM10_HREF_NEG = 0x08 # HREF negative
COM10_VSYNC_NEG = 0x02 # VSYNC negative
COM10_HSYNC_NEG = 0x01 # HSYNC negative

CTRL1_AWB = 0x08 # Enable AWB

C_TH_SET = lambda h,l:  ((h<<4)|(l&0x0F))

REG32_UXGA = 0x36
REG32_SVGA = 0x09
REG32_CIF = 0x89

CLKRC_2X = 0x80
CLKRC_2X_UXGA = (0x01 | CLKRC_2X)
CLKRC_2X_SVGA = CLKRC_2X
CLKRC_2X_CIF = CLKRC_2X

ratio_table = [
    // ox,  oy,   mx,   my
    [   0,   0, 1600, 1200 ], //4x3
    [   8,  72, 1584, 1056 ], //3x2
    [   0, 100, 1600, 1000 ], //16x10
    [   0, 120, 1600,  960 ], //5x3
    [   0, 150, 1600,  900 ], //16x9
    [   2, 258, 1596,  684 ], //21x9
    [  50,   0, 1500, 1200 ], //5x4
    [ 200,   0, 1200, 1200 ], //1x1
    [ 462,   0,  676, 1200 ]  //9x16
];

// 30fps@24MHz
ov2640_settings_cif = [
    [BANK_SEL, BANK_DSP],
    [0x2c, 0xff],
    [0x2e, 0xdf],
    [BANK_SEL, BANK_SENSOR],
    [0x3c, 0x32],
    [CLKRC, 0x01],
    [COM2, COM2_OUT_DRIVE_3x],
    [REG04, REG04_DEFAULT],
    [COM8, COM8_DEFAULT | COM8_BNDF_EN | COM8_AGC_EN | COM8_AEC_EN],
    [COM9, COM9_AGC_SET(COM9_AGC_GAIN_8x)],
    [0x2c, 0x0c],
    [0x33, 0x78],
    [0x3a, 0x33],
    [0x3b, 0xfB],
    [0x3e, 0x00],
    [0x43, 0x11],
    [0x16, 0x10],
    [0x39, 0x92],
    [0x35, 0xda],
    [0x22, 0x1a],
    [0x37, 0xc3],
    [0x23, 0x00],
    [ARCOM2, 0xc0],
    [0x06, 0x88],
    [0x07, 0xc0],
    [COM4, 0x87],
    [0x0e, 0x41],
    [0x4c, 0x00],
    [0x4a, 0x81],
    [0x21, 0x99],
    [AEW, 0x40],
    [AEB, 0x38],
    [VV, VV_AGC_TH_SET(8,2)],
    [0x5c, 0x00],
    [0x63, 0x00],
    [HISTO_LOW, 0x70],
    [HISTO_HIGH, 0x80],
    [0x7c, 0x05],
    [0x20, 0x80],
    [0x28, 0x30],
    [0x6c, 0x00],
    [0x6d, 0x80],
    [0x6e, 0x00],
    [0x70, 0x02],
    [0x71, 0x94],
    [0x73, 0xc1],
    [0x3d, 0x34],
    [0x5a, 0x57],
    [BD50, 0xbb],
    [BD60, 0x9c],
    [COM7, COM7_RES_CIF],
    [HSTART, 0x11],
    [HSTOP, 0x43],
    [VSTART, 0x00],
    [VSTOP, 0x25],
    [REG32, 0x89],
    [0x37, 0xc0],
    [BD50, 0xca],
    [BD60, 0xa8],
    [0x6d, 0x00],
    [0x3d, 0x38],
    [BANK_SEL, BANK_DSP],
    [0xe5, 0x7f],
    [MC_BIST, MC_BIST_RESET | MC_BIST_BOOT_ROM_SEL],
    [0x41, 0x24],
    [RESET, RESET_JPEG | RESET_DVP],
    [0x76, 0xff],
    [0x33, 0xa0],
    [0x42, 0x20],
    [0x43, 0x18],
    [0x4c, 0x00],
    [CTRL3, CTRL3_WPC_EN | 0x10 ],
    [0x88, 0x3f],
    [0xd7, 0x03],
    [0xd9, 0x10],
    [R_DVP_SP, R_DVP_SP_AUTO_MODE | 0x02],
    [0xc8, 0x08],
    [0xc9, 0x80],
    [BPADDR, 0x00],
    [BPDATA, 0x00],
    [BPADDR, 0x03],
    [BPDATA, 0x48],
    [BPDATA, 0x48],
    [BPADDR, 0x08],
    [BPDATA, 0x20],
    [BPDATA, 0x10],
    [BPDATA, 0x0e],
    [0x90, 0x00],
    [0x91, 0x0e],
    [0x91, 0x1a],
    [0x91, 0x31],
    [0x91, 0x5a],
    [0x91, 0x69],
    [0x91, 0x75],
    [0x91, 0x7e],
    [0x91, 0x88],
    [0x91, 0x8f],
    [0x91, 0x96],
    [0x91, 0xa3],
    [0x91, 0xaf],
    [0x91, 0xc4],
    [0x91, 0xd7],
    [0x91, 0xe8],
    [0x91, 0x20],
    [0x92, 0x00],
    [0x93, 0x06],
    [0x93, 0xe3],
    [0x93, 0x05],
    [0x93, 0x05],
    [0x93, 0x00],
    [0x93, 0x04],
    [0x93, 0x00],
    [0x93, 0x00],
    [0x93, 0x00],
    [0x93, 0x00],
    [0x93, 0x00],
    [0x93, 0x00],
    [0x93, 0x00],
    [0x96, 0x00],
    [0x97, 0x08],
    [0x97, 0x19],
    [0x97, 0x02],
    [0x97, 0x0c],
    [0x97, 0x24],
    [0x97, 0x30],
    [0x97, 0x28],
    [0x97, 0x26],
    [0x97, 0x02],
    [0x97, 0x98],
    [0x97, 0x80],
    [0x97, 0x00],
    [0x97, 0x00],
    [0xa4, 0x00],
    [0xa8, 0x00],
    [0xc5, 0x11],
    [0xc6, 0x51],
    [0xbf, 0x80],
    [0xc7, 0x10],
    [0xb6, 0x66],
    [0xb8, 0xA5],
    [0xb7, 0x64],
    [0xb9, 0x7C],
    [0xb3, 0xaf],
    [0xb4, 0x97],
    [0xb5, 0xFF],
    [0xb0, 0xC5],
    [0xb1, 0x94],
    [0xb2, 0x0f],
    [0xc4, 0x5c],
    [CTRL1, 0xfd],
    [0x7f, 0x00],
    [0xe5, 0x1f],
    [0xe1, 0x67],
    [0xdd, 0x7f],
    [IMAGE_MODE, 0x00],
    [RESET, 0x00],
    [R_BYPASS, R_BYPASS_DSP_EN],
    [0, 0]
];

ov2640_settings_to_cif = [
    [BANK_SEL, BANK_SENSOR],
    [COM7, COM7_RES_CIF],

    //Set the sensor output window
    [COM1, 0x0A],
    [REG32, REG32_CIF],
    [HSTART, 0x11],
    [HSTOP, 0x43],
    [VSTART, 0x00],
    [VSTOP, 0x25],

    //[CLKRC, 0x00],
    [BD50, 0xca],
    [BD60, 0xa8],
    [0x5a, 0x23],
    [0x6d, 0x00],
    [0x3d, 0x38],
    [0x39, 0x92],
    [0x35, 0xda],
    [0x22, 0x1a],
    [0x37, 0xc3],
    [0x23, 0x00],
    [ARCOM2, 0xc0],
    [0x06, 0x88],
    [0x07, 0xc0],
    [COM4, 0x87],
    [0x0e, 0x41],
    [0x4c, 0x00],
    [BANK_SEL, BANK_DSP],
    [RESET, RESET_DVP],

    //Set the sensor resolution (UXGA, SVGA, CIF)
    [HSIZE8, 0x32],
    [VSIZE8, 0x25],
    [SIZEL, 0x00],

    //Set the image window size >= output size
    [HSIZE, 0x64],
    [VSIZE, 0x4a],
    [XOFFL, 0x00],
    [YOFFL, 0x00],
    [VHYX, 0x00],
    [TEST, 0x00],

    [CTRL2, CTRL2_DCW_EN | 0x1D],
    [CTRLI, CTRLI_LP_DP | 0x00],
    //[R_DVP_SP, 0x08],
    [0, 0]
];

ov2640_settings_to_svga = [
    [BANK_SEL, BANK_SENSOR],
    [COM7, COM7_RES_SVGA],

    //Set the sensor output window
    [COM1, 0x0A],
    [REG32, REG32_SVGA],
    [HSTART, 0x11],
    [HSTOP, 0x43],
    [VSTART, 0x00],
    [VSTOP, 0x4b],

    //[CLKRC, 0x00],
    [0x37, 0xc0],
    [BD50, 0xca],
    [BD60, 0xa8],
    [0x5a, 0x23],
    [0x6d, 0x00],
    [0x3d, 0x38],
    [0x39, 0x92],
    [0x35, 0xda],
    [0x22, 0x1a],
    [0x37, 0xc3],
    [0x23, 0x00],
    [ARCOM2, 0xc0],
    [0x06, 0x88],
    [0x07, 0xc0],
    [COM4, 0x87],
    [0x0e, 0x41],
    [0x42, 0x03],
    [0x4c, 0x00],
    [BANK_SEL, BANK_DSP],
    [RESET, RESET_DVP],

    //Set the sensor resolution (UXGA, SVGA, CIF)
    [HSIZE8, 0x64],
    [VSIZE8, 0x4B],
    [SIZEL, 0x00],

    //Set the image window size >= output size
    [HSIZE, 0xC8],
    [VSIZE, 0x96],
    [XOFFL, 0x00],
    [YOFFL, 0x00],
    [VHYX, 0x00],
    [TEST, 0x00],

    [CTRL2, CTRL2_DCW_EN | 0x1D],
    [CTRLI, CTRLI_LP_DP | 0x00],
    //[R_DVP_SP, 0x08],
    [0, 0]
];

ov2640_settings_to_uxga = [
    [BANK_SEL, BANK_SENSOR],
    [COM7, COM7_RES_UXGA],

    //Set the sensor output window
    [COM1, 0x0F],
    [REG32, REG32_UXGA],
    [HSTART, 0x11],
    [HSTOP, 0x75],
    [VSTART, 0x01],
    [VSTOP, 0x97],

    //[CLKRC, 0x00],
    [0x3d, 0x34],
    [BD50, 0xbb],
    [BD60, 0x9c],
    [0x5a, 0x57],
    [0x6d, 0x80],
    [0x39, 0x82],
    [0x23, 0x00],
    [0x07, 0xc0],
    [0x4c, 0x00],
    [0x35, 0x88],
    [0x22, 0x0a],
    [0x37, 0x40],
    [ARCOM2, 0xa0],
    [0x06, 0x02],
    [COM4, 0xb7],
    [0x0e, 0x01],
    [0x42, 0x83],
    [BANK_SEL, BANK_DSP],
    [RESET, RESET_DVP],

    //Set the sensor resolution (UXGA, SVGA, CIF)
    [HSIZE8, 0xc8],
    [VSIZE8, 0x96],
    [SIZEL, 0x00],

    //Set the image window size >= output size
    [HSIZE, 0x90],
    [VSIZE, 0x2c],
    [XOFFL, 0x00],
    [YOFFL, 0x00],
    [VHYX, 0x88],
    [TEST, 0x00],

    [CTRL2, CTRL2_DCW_EN | 0x1d],
    [CTRLI, 0x00],
    //[R_DVP_SP, 0x06],
    [0, 0]
];

ov2640_settings_jpeg3 = [
    [BANK_SEL, BANK_DSP],
    [RESET, RESET_JPEG | RESET_DVP],
    [IMAGE_MODE, IMAGE_MODE_JPEG_EN | IMAGE_MODE_HREF_VSYNC],
    [0xD7, 0x03],
    [0xE1, 0x77],
    [0xE5, 0x1F],
    [0xD9, 0x10],
    [0xDF, 0x80],
    [0x33, 0x80],
    [0x3C, 0x10],
    [0xEB, 0x30],
    [0xDD, 0x7F],
    [RESET, 0x00],
    [0, 0]
];

ov2640_settings_yuv422 = [
    [BANK_SEL, BANK_DSP],
    [RESET, RESET_DVP],
    [IMAGE_MODE, IMAGE_MODE_YUV422],
    [0xD7, 0x01],
    [0xE1, 0x67],
    [RESET, 0x00],
    [0, 0],
];

ov2640_settings_rgb565 = [
    [BANK_SEL, BANK_DSP],
    [RESET, RESET_DVP],
    [IMAGE_MODE, IMAGE_MODE_RGB565],
    [0xD7, 0x03],
    [0xE1, 0x77],
    [RESET, 0x00],
    [0, 0],
];

brightness_regs = [
    [BPADDR, BPDATA, BPADDR, BPDATA, BPDATA ],
    [0x00, 0x04, 0x09, 0x00, 0x00 ], # -2
    [0x00, 0x04, 0x09, 0x10, 0x00 ], # -1
    [0x00, 0x04, 0x09, 0x20, 0x00 ], #  0
    [0x00, 0x04, 0x09, 0x30, 0x00 ], # +1
    [0x00, 0x04, 0x09, 0x40, 0x00 ], # +2
];

contrast_regs = [
    [BPADDR, BPDATA, BPADDR, BPDATA, BPDATA, BPDATA, BPDATA ],
    [0x00, 0x04, 0x07, 0x20, 0x18, 0x34, 0x06 ], # -2
    [0x00, 0x04, 0x07, 0x20, 0x1c, 0x2a, 0x06 ], # -1
    [0x00, 0x04, 0x07, 0x20, 0x20, 0x20, 0x06 ], #  0
    [0x00, 0x04, 0x07, 0x20, 0x24, 0x16, 0x06 ], # +1
    [0x00, 0x04, 0x07, 0x20, 0x28, 0x0c, 0x06 ], # +2
];

saturation_regs = [
    [BPADDR, BPDATA, BPADDR, BPDATA, BPDATA ],
    [0x00, 0x02, 0x03, 0x28, 0x28 ], # -2
    [0x00, 0x02, 0x03, 0x38, 0x38 ], # -1
    [0x00, 0x02, 0x03, 0x48, 0x48 ], #  0
    [0x00, 0x02, 0x03, 0x58, 0x58 ], # +1
    [0x00, 0x02, 0x03, 0x68, 0x68 ], # +2
];

special_effects_regs = [
    [BPADDR, BPDATA, BPADDR, BPDATA, BPDATA ],
    [0x00, 0X00, 0x05, 0X80, 0X80 ], # no effect
    [0x00, 0X40, 0x05, 0X80, 0X80 ], # negative
    [0x00, 0X18, 0x05, 0X80, 0X80 ], # black and white
    [0x00, 0X18, 0x05, 0X40, 0XC0 ], # reddish
    [0x00, 0X18, 0x05, 0X40, 0X40 ], # greenish
    [0x00, 0X18, 0x05, 0XA0, 0X40 ], # blue
    [0x00, 0X18, 0x05, 0X40, 0XA6 ], # retro
];

wb_modes_regs = [
    [0XCC, 0XCD, 0XCE ],
    [0x5E, 0X41, 0x54 ], # sunny
    [0x65, 0X41, 0x4F ], # cloudy
    [0x52, 0X41, 0x66 ], # office
    [0x42, 0X3F, 0x71 ], # home
];

ae_levels_regs = [
    [ AEW,  AEB,  VV  ],
    [0x20, 0X18, 0x60 ],
    [0x34, 0X1C, 0x00 ],
    [0x3E, 0X38, 0x81 ],
    [0x48, 0X40, 0x81 ],
    [0x58, 0X50, 0x92 ],
];

agc_gain_tbl = [
    0x00, 0x10, 0x18, 0x30, 0x34, 0x38, 0x3C, 0x70, 0x72, 0x74, 0x76, 0x78, 0x7A, 0x7C, 0x7E, 0xF0,
    0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF
];

#endif # _OV2640_SETTINGS_H_
